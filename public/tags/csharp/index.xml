<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Csharp on My New Hugo Site</title>
    <link>http://localhost:1313/tags/csharp/</link>
    <description>Recent content in Csharp on My New Hugo Site</description>
    <generator>Hugo -- 0.151.2</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/tags/csharp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>{{title}}</title>
      <link>http://localhost:1313/posts/csharp-keyword-yield/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/csharp-keyword-yield/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AI-generated note&lt;/strong&gt; (reviewed by Maru Lin)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-intent&#34;&gt;ðŸ§© Intent&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;yield&lt;/code&gt; keyword simplifies the creation of iterators by allowing a method to produce a sequence of values lazily, one at a time, without building a collection in memory.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-description&#34;&gt;ðŸ’¡ Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;yield return &amp;lt;value&amp;gt;&lt;/code&gt;: Produces a value to the enumerator and pauses execution until the next iteration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;yield break&lt;/code&gt;: Terminates the iteration early.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When a method uses &lt;code&gt;yield&lt;/code&gt;, the C# compiler automatically generates a &lt;strong&gt;state machine&lt;/strong&gt; that implements &lt;code&gt;IEnumerable&lt;/code&gt; and &lt;code&gt;IEnumerator&lt;/code&gt;. This allows the method to pause and resume execution seamlessly across iterations.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
